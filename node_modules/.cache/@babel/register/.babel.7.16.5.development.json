{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/developer/Escritorio/CRUD/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/developer/Escritorio/CRUD\",\"filename\":\"/home/developer/Escritorio/CRUD/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/developer/Escritorio/CRUD\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/developer/Escritorio/CRUD/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/developer/Escritorio/CRUD",
      "filename": "/home/developer/Escritorio/CRUD/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/developer/Escritorio/CRUD",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/developer/Escritorio/CRUD/gulpfile.babel.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/developer/Escritorio/CRUD/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/developer/Escritorio/CRUD/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _sass = _interopRequireDefault(require(\"sass\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _browserSync = require(\"browser-sync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nSi quiero empesar un proyecto nuevo con otro nombre\ndebo de utilizar npm init para que me carge los parametros\n*/\n//Gulp\n//Babel\n//PUG\n//Sass\nvar sass = (0, _gulpSass[\"default\"])(_sass[\"default\"]); //Browser sync\n\nvar production = false;\n\n_gulp[\"default\"].task('babel', function () {\n  return _gulp[\"default\"].src('./dev/js/*.js').pipe((0, _gulpBabel[\"default\"])({\n    presets: ['@babel/env']\n  })).pipe(_gulp[\"default\"].dest('./public/js'));\n});\n\n_gulp[\"default\"].task('pug', function () {\n  return _gulp[\"default\"].src('./dev/pug/*.pug').pipe((0, _gulpPug[\"default\"])({\n    pretty: production ? false : true\n  })).pipe(_gulp[\"default\"].dest('./public/'));\n});\n\n_gulp[\"default\"].task('sass', function () {\n  return _gulp[\"default\"].src('./dev/scss/styles.scss').pipe(sass({\n    outputStyle: 'compressed'\n  })).pipe(_gulp[\"default\"].dest('./public/css')).pipe((0, _browserSync.stream)());\n});\n\n_gulp[\"default\"].task('default', function () {\n  (0, _browserSync.init)({\n    server: './public'\n  });\n\n  _gulp[\"default\"].watch('./dev/pug/**/*.pug', _gulp[\"default\"].series('pug')).on('change', _browserSync.reload);\n\n  _gulp[\"default\"].watch('./dev/scss/**/*.scss', _gulp[\"default\"].series('sass')).on('change', _browserSync.reload);\n\n  _gulp[\"default\"].watch('./dev/js/*.js', _gulp[\"default\"].series('babel')).on('change', _browserSync.reload);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJkYXJ0U2FzcyIsInByb2R1Y3Rpb24iLCJndWxwIiwidGFzayIsInNyYyIsInBpcGUiLCJwcmVzZXRzIiwiZGVzdCIsInByZXR0eSIsIm91dHB1dFN0eWxlIiwic2VydmVyIiwid2F0Y2giLCJzZXJpZXMiLCJvbiIsInJlbG9hZCJdLCJtYXBwaW5ncyI6Ijs7QUFLQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFLQTs7OztBQWpCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBSUEsSUFBTUEsSUFBSSxHQUFHLDBCQUFTQyxnQkFBVCxDQUFiLEMsQ0FFQTs7QUFJQSxJQUFNQyxVQUFVLEdBQUcsS0FBbkI7O0FBRUFDLGlCQUFLQyxJQUFMLENBQVUsT0FBVixFQUFtQixZQUFNO0FBQ3JCLFNBQU9ELGlCQUNGRSxHQURFLENBQ0UsZUFERixFQUVGQyxJQUZFLENBRUcsMkJBQU07QUFDUkMsSUFBQUEsT0FBTyxFQUFFLENBQUMsWUFBRDtBQURELEdBQU4sQ0FGSCxFQUtGRCxJQUxFLENBS0dILGlCQUFLSyxJQUFMLENBQVUsYUFBVixDQUxILENBQVA7QUFNSCxDQVBEOztBQVNBTCxpQkFBS0MsSUFBTCxDQUFVLEtBQVYsRUFBaUIsWUFBTTtBQUNuQixTQUFPRCxpQkFBS0UsR0FBTCxDQUFTLGlCQUFULEVBQ0ZDLElBREUsQ0FDRyx5QkFBSTtBQUNORyxJQUFBQSxNQUFNLEVBQUVQLFVBQVUsR0FBRyxLQUFILEdBQVc7QUFEdkIsR0FBSixDQURILEVBSUZJLElBSkUsQ0FJR0gsaUJBQUtLLElBQUwsQ0FBVSxXQUFWLENBSkgsQ0FBUDtBQUtILENBTkQ7O0FBUUFMLGlCQUFLQyxJQUFMLENBQVUsTUFBVixFQUFrQixZQUFNO0FBQ3BCLFNBQU9ELGlCQUFLRSxHQUFMLENBQVMsd0JBQVQsRUFDRkMsSUFERSxDQUNHTixJQUFJLENBQUM7QUFDUFUsSUFBQUEsV0FBVyxFQUFFO0FBRE4sR0FBRCxDQURQLEVBSUZKLElBSkUsQ0FJR0gsaUJBQUtLLElBQUwsQ0FBVSxjQUFWLENBSkgsRUFLRkYsSUFMRSxDQUtHLDBCQUxILENBQVA7QUFNSCxDQVBEOztBQVNBSCxpQkFBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUIsWUFBTTtBQUN2Qix5QkFBTztBQUNITyxJQUFBQSxNQUFNLEVBQUU7QUFETCxHQUFQOztBQUdBUixtQkFBS1MsS0FBTCxDQUFXLG9CQUFYLEVBQWlDVCxpQkFBS1UsTUFBTCxDQUFZLEtBQVosQ0FBakMsRUFBcURDLEVBQXJELENBQXdELFFBQXhELEVBQWtFQyxtQkFBbEU7O0FBQ0FaLG1CQUFLUyxLQUFMLENBQVcsc0JBQVgsRUFBbUNULGlCQUFLVSxNQUFMLENBQVksTUFBWixDQUFuQyxFQUF3REMsRUFBeEQsQ0FBMkQsUUFBM0QsRUFBcUVDLG1CQUFyRTs7QUFDQVosbUJBQUtTLEtBQUwsQ0FBVyxlQUFYLEVBQTRCVCxpQkFBS1UsTUFBTCxDQUFZLE9BQVosQ0FBNUIsRUFBa0RDLEVBQWxELENBQXFELFFBQXJELEVBQStEQyxtQkFBL0Q7QUFDSCxDQVBEIiwic291cmNlUm9vdCI6Ii9ob21lL2RldmVsb3Blci9Fc2NyaXRvcmlvL0NSVUQvIiwic291cmNlc0NvbnRlbnQiOlsiLypcblNpIHF1aWVybyBlbXBlc2FyIHVuIHByb3llY3RvIG51ZXZvIGNvbiBvdHJvIG5vbWJyZVxuZGVibyBkZSB1dGlsaXphciBucG0gaW5pdCBwYXJhIHF1ZSBtZSBjYXJnZSBsb3MgcGFyYW1ldHJvc1xuKi9cbi8vR3VscFxuaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XG4vL0JhYmVsXG5pbXBvcnQgYmFiZWwgZnJvbSAnZ3VscC1iYWJlbCc7XG4vL1BVR1xuaW1wb3J0IHB1ZyBmcm9tICdndWxwLXB1Zyc7XG4vL1Nhc3NcbmltcG9ydCBkYXJ0U2FzcyBmcm9tICdzYXNzJ1xuaW1wb3J0IGd1bHBTYXNzIGZyb20gJ2d1bHAtc2FzcydcblxuY29uc3Qgc2FzcyA9IGd1bHBTYXNzKGRhcnRTYXNzKTtcblxuLy9Ccm93c2VyIHN5bmNcbmltcG9ydCB7IGluaXQgYXMgc2VydmVyLCBzdHJlYW0sIHJlbG9hZCB9IGZyb20gJ2Jyb3dzZXItc3luYydcblxuXG5jb25zdCBwcm9kdWN0aW9uID0gZmFsc2U7XG5cbmd1bHAudGFzaygnYmFiZWwnLCAoKSA9PiB7XG4gICAgcmV0dXJuIGd1bHBcbiAgICAgICAgLnNyYygnLi9kZXYvanMvKi5qcycpXG4gICAgICAgIC5waXBlKGJhYmVsKHtcbiAgICAgICAgICAgIHByZXNldHM6IFsnQGJhYmVsL2VudiddXG4gICAgICAgIH0pKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoJy4vcHVibGljL2pzJykpXG59KVxuXG5ndWxwLnRhc2soJ3B1ZycsICgpID0+IHtcbiAgICByZXR1cm4gZ3VscC5zcmMoJy4vZGV2L3B1Zy8qLnB1ZycpXG4gICAgICAgIC5waXBlKHB1Zyh7XG4gICAgICAgICAgICBwcmV0dHk6IHByb2R1Y3Rpb24gPyBmYWxzZSA6IHRydWVcbiAgICAgICAgfSkpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdCgnLi9wdWJsaWMvJykpXG59KVxuXG5ndWxwLnRhc2soJ3Nhc3MnLCAoKSA9PiB7XG4gICAgcmV0dXJuIGd1bHAuc3JjKCcuL2Rldi9zY3NzL3N0eWxlcy5zY3NzJylcbiAgICAgICAgLnBpcGUoc2Fzcyh7XG4gICAgICAgICAgICBvdXRwdXRTdHlsZTogJ2NvbXByZXNzZWQnXG4gICAgICAgIH0pKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoJy4vcHVibGljL2NzcycpKVxuICAgICAgICAucGlwZShzdHJlYW0oKSlcbn0pXG5cbmd1bHAudGFzaygnZGVmYXVsdCcsICgpID0+IHtcbiAgICBzZXJ2ZXIoe1xuICAgICAgICBzZXJ2ZXI6ICcuL3B1YmxpYydcbiAgICB9KVxuICAgIGd1bHAud2F0Y2goJy4vZGV2L3B1Zy8qKi8qLnB1ZycsIGd1bHAuc2VyaWVzKCdwdWcnKSkub24oJ2NoYW5nZScsIHJlbG9hZClcbiAgICBndWxwLndhdGNoKCcuL2Rldi9zY3NzLyoqLyouc2NzcycsIGd1bHAuc2VyaWVzKCdzYXNzJykpLm9uKCdjaGFuZ2UnLCByZWxvYWQpXG4gICAgZ3VscC53YXRjaCgnLi9kZXYvanMvKi5qcycsIGd1bHAuc2VyaWVzKCdiYWJlbCcpKS5vbignY2hhbmdlJywgcmVsb2FkKVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "dartSass",
        "production",
        "gulp",
        "task",
        "src",
        "pipe",
        "presets",
        "dest",
        "pretty",
        "outputStyle",
        "server",
        "watch",
        "series",
        "on",
        "reload"
      ],
      "mappings": ";;AAKA;;AAEA;;AAEA;;AAEA;;AACA;;AAKA;;;;AAjBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA,IAAMA,IAAI,GAAG,0BAASC,gBAAT,CAAb,C,CAEA;;AAIA,IAAMC,UAAU,GAAG,KAAnB;;AAEAC,iBAAKC,IAAL,CAAU,OAAV,EAAmB,YAAM;AACrB,SAAOD,iBACFE,GADE,CACE,eADF,EAEFC,IAFE,CAEG,2BAAM;AACRC,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAN,CAFH,EAKFD,IALE,CAKGH,iBAAKK,IAAL,CAAU,aAAV,CALH,CAAP;AAMH,CAPD;;AASAL,iBAAKC,IAAL,CAAU,KAAV,EAAiB,YAAM;AACnB,SAAOD,iBAAKE,GAAL,CAAS,iBAAT,EACFC,IADE,CACG,yBAAI;AACNG,IAAAA,MAAM,EAAEP,UAAU,GAAG,KAAH,GAAW;AADvB,GAAJ,CADH,EAIFI,IAJE,CAIGH,iBAAKK,IAAL,CAAU,WAAV,CAJH,CAAP;AAKH,CAND;;AAQAL,iBAAKC,IAAL,CAAU,MAAV,EAAkB,YAAM;AACpB,SAAOD,iBAAKE,GAAL,CAAS,wBAAT,EACFC,IADE,CACGN,IAAI,CAAC;AACPU,IAAAA,WAAW,EAAE;AADN,GAAD,CADP,EAIFJ,IAJE,CAIGH,iBAAKK,IAAL,CAAU,cAAV,CAJH,EAKFF,IALE,CAKG,0BALH,CAAP;AAMH,CAPD;;AASAH,iBAAKC,IAAL,CAAU,SAAV,EAAqB,YAAM;AACvB,yBAAO;AACHO,IAAAA,MAAM,EAAE;AADL,GAAP;;AAGAR,mBAAKS,KAAL,CAAW,oBAAX,EAAiCT,iBAAKU,MAAL,CAAY,KAAZ,CAAjC,EAAqDC,EAArD,CAAwD,QAAxD,EAAkEC,mBAAlE;;AACAZ,mBAAKS,KAAL,CAAW,sBAAX,EAAmCT,iBAAKU,MAAL,CAAY,MAAZ,CAAnC,EAAwDC,EAAxD,CAA2D,QAA3D,EAAqEC,mBAArE;;AACAZ,mBAAKS,KAAL,CAAW,eAAX,EAA4BT,iBAAKU,MAAL,CAAY,OAAZ,CAA5B,EAAkDC,EAAlD,CAAqD,QAArD,EAA+DC,mBAA/D;AACH,CAPD",
      "sourceRoot": "/home/developer/Escritorio/CRUD/",
      "sourcesContent": [
        "/*\nSi quiero empesar un proyecto nuevo con otro nombre\ndebo de utilizar npm init para que me carge los parametros\n*/\n//Gulp\nimport gulp from 'gulp';\n//Babel\nimport babel from 'gulp-babel';\n//PUG\nimport pug from 'gulp-pug';\n//Sass\nimport dartSass from 'sass'\nimport gulpSass from 'gulp-sass'\n\nconst sass = gulpSass(dartSass);\n\n//Browser sync\nimport { init as server, stream, reload } from 'browser-sync'\n\n\nconst production = false;\n\ngulp.task('babel', () => {\n    return gulp\n        .src('./dev/js/*.js')\n        .pipe(babel({\n            presets: ['@babel/env']\n        }))\n        .pipe(gulp.dest('./public/js'))\n})\n\ngulp.task('pug', () => {\n    return gulp.src('./dev/pug/*.pug')\n        .pipe(pug({\n            pretty: production ? false : true\n        }))\n        .pipe(gulp.dest('./public/'))\n})\n\ngulp.task('sass', () => {\n    return gulp.src('./dev/scss/styles.scss')\n        .pipe(sass({\n            outputStyle: 'compressed'\n        }))\n        .pipe(gulp.dest('./public/css'))\n        .pipe(stream())\n})\n\ngulp.task('default', () => {\n    server({\n        server: './public'\n    })\n    gulp.watch('./dev/pug/**/*.pug', gulp.series('pug')).on('change', reload)\n    gulp.watch('./dev/scss/**/*.scss', gulp.series('sass')).on('change', reload)\n    gulp.watch('./dev/js/*.js', gulp.series('babel')).on('change', reload)\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1640873553246
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/opt/lampp/htdocs/CRUD/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/opt/lampp/htdocs/CRUD\",\"filename\":\"/opt/lampp/htdocs/CRUD/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/opt/lampp/htdocs/CRUD\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/opt/lampp/htdocs/CRUD/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/opt/lampp/htdocs/CRUD",
      "filename": "/opt/lampp/htdocs/CRUD/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/opt/lampp/htdocs/CRUD",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/opt/lampp/htdocs/CRUD/gulpfile.babel.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/opt/lampp/htdocs/CRUD/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/opt/lampp/htdocs/CRUD/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _sass = _interopRequireDefault(require(\"sass\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _browserSync = require(\"browser-sync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\nSi quiero empesar un proyecto nuevo con otro nombre\ndebo de utilizar npm init para que me carge los parametros\n*/\n//Gulp\n//Babel\n//PUG\n//Sass\nvar sass = (0, _gulpSass[\"default\"])(_sass[\"default\"]); //Browser sync\n\nvar production = false;\n\n_gulp[\"default\"].task('babel', function () {\n  return _gulp[\"default\"].src('./dev/js/*.js').pipe((0, _gulpBabel[\"default\"])({\n    presets: ['@babel/env']\n  })).pipe(_gulp[\"default\"].dest('./public/js'));\n});\n\n_gulp[\"default\"].task('pug', function () {\n  return _gulp[\"default\"].src('./dev/pug/*.pug').pipe((0, _gulpPug[\"default\"])({\n    pretty: production ? false : true\n  })).pipe(_gulp[\"default\"].dest('./public/'));\n});\n\n_gulp[\"default\"].task('sass', function () {\n  return _gulp[\"default\"].src('./dev/scss/styles.scss').pipe(sass({\n    outputStyle: 'compressed'\n  })).pipe(_gulp[\"default\"].dest('./public/css')).pipe((0, _browserSync.stream)());\n});\n\n_gulp[\"default\"].task('default', function () {\n  (0, _browserSync.init)({\n    proxy: 'localhost/CRUD/public' //server: './public'\n\n  });\n\n  _gulp[\"default\"].watch('./dev/pug/**/*.pug', _gulp[\"default\"].series('pug')).on('change', _browserSync.reload);\n\n  _gulp[\"default\"].watch('./dev/scss/**/*.scss', _gulp[\"default\"].series('sass')).on('change', _browserSync.reload);\n\n  _gulp[\"default\"].watch('./dev/js/*.js', _gulp[\"default\"].series('babel')).on('change', _browserSync.reload);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJkYXJ0U2FzcyIsInByb2R1Y3Rpb24iLCJndWxwIiwidGFzayIsInNyYyIsInBpcGUiLCJwcmVzZXRzIiwiZGVzdCIsInByZXR0eSIsIm91dHB1dFN0eWxlIiwicHJveHkiLCJ3YXRjaCIsInNlcmllcyIsIm9uIiwicmVsb2FkIl0sIm1hcHBpbmdzIjoiOztBQUtBOztBQUVBOztBQUVBOztBQUVBOztBQUNBOztBQUtBOzs7O0FBakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFJQSxJQUFNQSxJQUFJLEdBQUcsMEJBQVNDLGdCQUFULENBQWIsQyxDQUVBOztBQUlBLElBQU1DLFVBQVUsR0FBRyxLQUFuQjs7QUFFQUMsaUJBQUtDLElBQUwsQ0FBVSxPQUFWLEVBQW1CLFlBQU07QUFDckIsU0FBT0QsaUJBQ0ZFLEdBREUsQ0FDRSxlQURGLEVBRUZDLElBRkUsQ0FFRywyQkFBTTtBQUNSQyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBREQsR0FBTixDQUZILEVBS0ZELElBTEUsQ0FLR0gsaUJBQUtLLElBQUwsQ0FBVSxhQUFWLENBTEgsQ0FBUDtBQU1ILENBUEQ7O0FBU0FMLGlCQUFLQyxJQUFMLENBQVUsS0FBVixFQUFpQixZQUFNO0FBQ25CLFNBQU9ELGlCQUFLRSxHQUFMLENBQVMsaUJBQVQsRUFDRkMsSUFERSxDQUNHLHlCQUFJO0FBQ05HLElBQUFBLE1BQU0sRUFBRVAsVUFBVSxHQUFHLEtBQUgsR0FBVztBQUR2QixHQUFKLENBREgsRUFJRkksSUFKRSxDQUlHSCxpQkFBS0ssSUFBTCxDQUFVLFdBQVYsQ0FKSCxDQUFQO0FBS0gsQ0FORDs7QUFRQUwsaUJBQUtDLElBQUwsQ0FBVSxNQUFWLEVBQWtCLFlBQU07QUFDcEIsU0FBT0QsaUJBQUtFLEdBQUwsQ0FBUyx3QkFBVCxFQUNGQyxJQURFLENBQ0dOLElBQUksQ0FBQztBQUNQVSxJQUFBQSxXQUFXLEVBQUU7QUFETixHQUFELENBRFAsRUFJRkosSUFKRSxDQUlHSCxpQkFBS0ssSUFBTCxDQUFVLGNBQVYsQ0FKSCxFQUtGRixJQUxFLENBS0csMEJBTEgsQ0FBUDtBQU1ILENBUEQ7O0FBU0FILGlCQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQixZQUFNO0FBQ3ZCLHlCQUFPO0FBQ0hPLElBQUFBLEtBQUssRUFBRSx1QkFESixDQUVIOztBQUZHLEdBQVA7O0FBSUFSLG1CQUFLUyxLQUFMLENBQVcsb0JBQVgsRUFBaUNULGlCQUFLVSxNQUFMLENBQVksS0FBWixDQUFqQyxFQUFxREMsRUFBckQsQ0FBd0QsUUFBeEQsRUFBa0VDLG1CQUFsRTs7QUFDQVosbUJBQUtTLEtBQUwsQ0FBVyxzQkFBWCxFQUFtQ1QsaUJBQUtVLE1BQUwsQ0FBWSxNQUFaLENBQW5DLEVBQXdEQyxFQUF4RCxDQUEyRCxRQUEzRCxFQUFxRUMsbUJBQXJFOztBQUNBWixtQkFBS1MsS0FBTCxDQUFXLGVBQVgsRUFBNEJULGlCQUFLVSxNQUFMLENBQVksT0FBWixDQUE1QixFQUFrREMsRUFBbEQsQ0FBcUQsUUFBckQsRUFBK0RDLG1CQUEvRDtBQUNILENBUkQiLCJzb3VyY2VSb290IjoiL29wdC9sYW1wcC9odGRvY3MvQ1JVRC8iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuU2kgcXVpZXJvIGVtcGVzYXIgdW4gcHJveWVjdG8gbnVldm8gY29uIG90cm8gbm9tYnJlXG5kZWJvIGRlIHV0aWxpemFyIG5wbSBpbml0IHBhcmEgcXVlIG1lIGNhcmdlIGxvcyBwYXJhbWV0cm9zXG4qL1xuLy9HdWxwXG5pbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbi8vQmFiZWxcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcbi8vUFVHXG5pbXBvcnQgcHVnIGZyb20gJ2d1bHAtcHVnJztcbi8vU2Fzc1xuaW1wb3J0IGRhcnRTYXNzIGZyb20gJ3Nhc3MnXG5pbXBvcnQgZ3VscFNhc3MgZnJvbSAnZ3VscC1zYXNzJ1xuXG5jb25zdCBzYXNzID0gZ3VscFNhc3MoZGFydFNhc3MpO1xuXG4vL0Jyb3dzZXIgc3luY1xuaW1wb3J0IHsgaW5pdCBhcyBzZXJ2ZXIsIHN0cmVhbSwgcmVsb2FkIH0gZnJvbSAnYnJvd3Nlci1zeW5jJ1xuXG5cbmNvbnN0IHByb2R1Y3Rpb24gPSBmYWxzZTtcblxuZ3VscC50YXNrKCdiYWJlbCcsICgpID0+IHtcbiAgICByZXR1cm4gZ3VscFxuICAgICAgICAuc3JjKCcuL2Rldi9qcy8qLmpzJylcbiAgICAgICAgLnBpcGUoYmFiZWwoe1xuICAgICAgICAgICAgcHJlc2V0czogWydAYmFiZWwvZW52J11cbiAgICAgICAgfSkpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdCgnLi9wdWJsaWMvanMnKSlcbn0pXG5cbmd1bHAudGFzaygncHVnJywgKCkgPT4ge1xuICAgIHJldHVybiBndWxwLnNyYygnLi9kZXYvcHVnLyoucHVnJylcbiAgICAgICAgLnBpcGUocHVnKHtcbiAgICAgICAgICAgIHByZXR0eTogcHJvZHVjdGlvbiA/IGZhbHNlIDogdHJ1ZVxuICAgICAgICB9KSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KCcuL3B1YmxpYy8nKSlcbn0pXG5cbmd1bHAudGFzaygnc2FzcycsICgpID0+IHtcbiAgICByZXR1cm4gZ3VscC5zcmMoJy4vZGV2L3Njc3Mvc3R5bGVzLnNjc3MnKVxuICAgICAgICAucGlwZShzYXNzKHtcbiAgICAgICAgICAgIG91dHB1dFN0eWxlOiAnY29tcHJlc3NlZCdcbiAgICAgICAgfSkpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdCgnLi9wdWJsaWMvY3NzJykpXG4gICAgICAgIC5waXBlKHN0cmVhbSgpKVxufSlcblxuZ3VscC50YXNrKCdkZWZhdWx0JywgKCkgPT4ge1xuICAgIHNlcnZlcih7XG4gICAgICAgIHByb3h5OiAnbG9jYWxob3N0L0NSVUQvcHVibGljJ1xuICAgICAgICAvL3NlcnZlcjogJy4vcHVibGljJ1xuICAgIH0pXG4gICAgZ3VscC53YXRjaCgnLi9kZXYvcHVnLyoqLyoucHVnJywgZ3VscC5zZXJpZXMoJ3B1ZycpKS5vbignY2hhbmdlJywgcmVsb2FkKVxuICAgIGd1bHAud2F0Y2goJy4vZGV2L3Njc3MvKiovKi5zY3NzJywgZ3VscC5zZXJpZXMoJ3Nhc3MnKSkub24oJ2NoYW5nZScsIHJlbG9hZClcbiAgICBndWxwLndhdGNoKCcuL2Rldi9qcy8qLmpzJywgZ3VscC5zZXJpZXMoJ2JhYmVsJykpLm9uKCdjaGFuZ2UnLCByZWxvYWQpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "dartSass",
        "production",
        "gulp",
        "task",
        "src",
        "pipe",
        "presets",
        "dest",
        "pretty",
        "outputStyle",
        "proxy",
        "watch",
        "series",
        "on",
        "reload"
      ],
      "mappings": ";;AAKA;;AAEA;;AAEA;;AAEA;;AACA;;AAKA;;;;AAjBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA,IAAMA,IAAI,GAAG,0BAASC,gBAAT,CAAb,C,CAEA;;AAIA,IAAMC,UAAU,GAAG,KAAnB;;AAEAC,iBAAKC,IAAL,CAAU,OAAV,EAAmB,YAAM;AACrB,SAAOD,iBACFE,GADE,CACE,eADF,EAEFC,IAFE,CAEG,2BAAM;AACRC,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAN,CAFH,EAKFD,IALE,CAKGH,iBAAKK,IAAL,CAAU,aAAV,CALH,CAAP;AAMH,CAPD;;AASAL,iBAAKC,IAAL,CAAU,KAAV,EAAiB,YAAM;AACnB,SAAOD,iBAAKE,GAAL,CAAS,iBAAT,EACFC,IADE,CACG,yBAAI;AACNG,IAAAA,MAAM,EAAEP,UAAU,GAAG,KAAH,GAAW;AADvB,GAAJ,CADH,EAIFI,IAJE,CAIGH,iBAAKK,IAAL,CAAU,WAAV,CAJH,CAAP;AAKH,CAND;;AAQAL,iBAAKC,IAAL,CAAU,MAAV,EAAkB,YAAM;AACpB,SAAOD,iBAAKE,GAAL,CAAS,wBAAT,EACFC,IADE,CACGN,IAAI,CAAC;AACPU,IAAAA,WAAW,EAAE;AADN,GAAD,CADP,EAIFJ,IAJE,CAIGH,iBAAKK,IAAL,CAAU,cAAV,CAJH,EAKFF,IALE,CAKG,0BALH,CAAP;AAMH,CAPD;;AASAH,iBAAKC,IAAL,CAAU,SAAV,EAAqB,YAAM;AACvB,yBAAO;AACHO,IAAAA,KAAK,EAAE,uBADJ,CAEH;;AAFG,GAAP;;AAIAR,mBAAKS,KAAL,CAAW,oBAAX,EAAiCT,iBAAKU,MAAL,CAAY,KAAZ,CAAjC,EAAqDC,EAArD,CAAwD,QAAxD,EAAkEC,mBAAlE;;AACAZ,mBAAKS,KAAL,CAAW,sBAAX,EAAmCT,iBAAKU,MAAL,CAAY,MAAZ,CAAnC,EAAwDC,EAAxD,CAA2D,QAA3D,EAAqEC,mBAArE;;AACAZ,mBAAKS,KAAL,CAAW,eAAX,EAA4BT,iBAAKU,MAAL,CAAY,OAAZ,CAA5B,EAAkDC,EAAlD,CAAqD,QAArD,EAA+DC,mBAA/D;AACH,CARD",
      "sourceRoot": "/opt/lampp/htdocs/CRUD/",
      "sourcesContent": [
        "/*\nSi quiero empesar un proyecto nuevo con otro nombre\ndebo de utilizar npm init para que me carge los parametros\n*/\n//Gulp\nimport gulp from 'gulp';\n//Babel\nimport babel from 'gulp-babel';\n//PUG\nimport pug from 'gulp-pug';\n//Sass\nimport dartSass from 'sass'\nimport gulpSass from 'gulp-sass'\n\nconst sass = gulpSass(dartSass);\n\n//Browser sync\nimport { init as server, stream, reload } from 'browser-sync'\n\n\nconst production = false;\n\ngulp.task('babel', () => {\n    return gulp\n        .src('./dev/js/*.js')\n        .pipe(babel({\n            presets: ['@babel/env']\n        }))\n        .pipe(gulp.dest('./public/js'))\n})\n\ngulp.task('pug', () => {\n    return gulp.src('./dev/pug/*.pug')\n        .pipe(pug({\n            pretty: production ? false : true\n        }))\n        .pipe(gulp.dest('./public/'))\n})\n\ngulp.task('sass', () => {\n    return gulp.src('./dev/scss/styles.scss')\n        .pipe(sass({\n            outputStyle: 'compressed'\n        }))\n        .pipe(gulp.dest('./public/css'))\n        .pipe(stream())\n})\n\ngulp.task('default', () => {\n    server({\n        proxy: 'localhost/CRUD/public'\n        //server: './public'\n    })\n    gulp.watch('./dev/pug/**/*.pug', gulp.series('pug')).on('change', reload)\n    gulp.watch('./dev/scss/**/*.scss', gulp.series('sass')).on('change', reload)\n    gulp.watch('./dev/js/*.js', gulp.series('babel')).on('change', reload)\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1641764392966
  }
}